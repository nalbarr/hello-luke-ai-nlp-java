/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // NAA. Add Stanford NLP.
    // - https://mvnrepository.com/artifact/edu.stanford.nlp/stanford-corenlp/3.9.2
    // NAA. Below is incompatible with Gradle 7?
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.9.2'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.9.2', classifier: 'models'        
    // NAA. Stanford NLP has ties to SL4J logger?
    // - https://stackoverflow.com/questions/7421612/slf4j-failed-to-load-class-org-slf4j-impl-staticloggerbinder
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'
    // NAA. Add Apache OpenNLP.
    // - https://opennlp.apache.org/docs/
    // - https://www.tutorialspoint.com/opennlp
    compile group: 'org.apache.opennlp', name: 'opennlp-tools', version: '1.9.2'
    compile group: 'org.apache.opennlp', name: 'opennlp-uima', version: '1.9.2'
}

application {
    // Define the main class for the application.
    mainClassName = 'hello.luke.ai.nlp.java.App'
}

// NAA.
// - This will copy dependencies to local directory for easier run and debugging
task copyDeps(type: Copy) {
  from configurations.runtime
  into 'build/lib'
}